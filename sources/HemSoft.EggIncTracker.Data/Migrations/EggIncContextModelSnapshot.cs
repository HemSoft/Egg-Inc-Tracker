// <auto-generated />
using System;
using HemSoft.EggIncTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HemSoft.EggIncTracker.Data.Migrations
{
    [DbContext(typeof(EggIncContext))]
    partial class EggIncContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.ContractDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasArtifactCaseReward")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProphecyEggReward")
                        .HasColumnType("bit");

                    b.Property<string>("KevId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LengthSeconds")
                        .HasColumnType("int");

                    b.Property<float>("MinutesPerToken")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlayerCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeasonId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.EventDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationInSeconds")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Multiplier")
                        .HasColumnType("real");

                    b.Property<int>("SecondsRemaining")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.GoalDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DailyPrestigeGoal")
                        .HasColumnType("int");

                    b.Property<string>("EBGoal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JERGoal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MERGoal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEGoal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeeklySEGainGoal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.MajPlayerRankingDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiscordName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EBString")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IGN")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("JER")
                        .HasColumnType("decimal(6, 3)")
                        .HasColumnName("JER");

                    b.Property<decimal>("MER")
                        .HasColumnType("decimal(6, 3)")
                        .HasColumnName("MER");

                    b.Property<int>("PE")
                        .HasColumnType("int")
                        .HasColumnName("PE");

                    b.Property<string>("Prestiges")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Prestiges");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SENumber")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("SEString")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MajPlayerRankings");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.MissionDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<float>("DurationSeconds")
                        .HasColumnType("real");

                    b.Property<int>("DurationType")
                        .HasColumnType("int");

                    b.Property<string>("FuelList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStandby")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LaunchTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("QualityBump")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReturnTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("SecondsRemaining")
                        .HasColumnType("real");

                    b.Property<int>("Ship")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TargetArtifact")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.PlayerContractDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<int>("BoostTokenAllotment")
                        .HasColumnType("int");

                    b.Property<int>("BoostsUsed")
                        .HasColumnType("int");

                    b.Property<double?>("BuffTimeValue")
                        .HasColumnType("float");

                    b.Property<byte>("ChickenRunsSent")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CompletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContractScore")
                        .HasColumnType("int");

                    b.Property<int?>("ContractScoreChange")
                        .HasColumnType("int");

                    b.Property<double>("ContributionRatio")
                        .HasColumnType("float");

                    b.Property<int>("CoopContributionFinalized")
                        .HasColumnType("int");

                    b.Property<string>("CoopId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("CoopStatus")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("CountedInSeason")
                        .HasColumnType("bit");

                    b.Property<string>("EID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EvaluationStartTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Grade")
                        .HasColumnType("tinyint");

                    b.Property<string>("KevId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfGoalsAchieved")
                        .HasColumnType("int");

                    b.Property<bool>("PointsReplay")
                        .HasColumnType("bit");

                    b.Property<string>("SeasonId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("TeamworkScore")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeAccepted")
                        .HasColumnType("datetime2");

                    b.Property<int>("TokenValueReceived")
                        .HasColumnType("int");

                    b.Property<double>("TokenValueSent")
                        .HasColumnType("float");

                    b.Property<byte>("TokensReceived")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TokensSent")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("PlayerContracts");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.PlayerDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CraftingLevel")
                        .HasColumnType("int");

                    b.Property<string>("EID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EarningsBonusPerHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EarningsBonusPercentage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ExpectedLegendaries")
                        .HasColumnType("real");

                    b.Property<float>("ExpectedLegendaryCrafts")
                        .HasColumnType("real");

                    b.Property<float>("ExpectedLegendaryDropsFromShips")
                        .HasColumnType("real");

                    b.Property<float>("HoarderScore")
                        .HasColumnType("real");

                    b.Property<float>("JER")
                        .HasColumnType("real");

                    b.Property<float>("LLC")
                        .HasColumnType("real");

                    b.Property<float>("MER")
                        .HasColumnType("real");

                    b.Property<string>("NextTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PiggyBreaks")
                        .HasColumnType("int");

                    b.Property<int>("PiggyConsumeValue")
                        .HasColumnType("int");

                    b.Property<bool?>("PiggyFull")
                        .HasColumnType("bit");

                    b.Property<float>("PlayerLegendaries")
                        .HasColumnType("real");

                    b.Property<float>("PlayerLegendariesExcludingLunarTotem")
                        .HasColumnType("real");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Prestiges")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProjectedTitleChange")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProphecyEggs")
                        .HasColumnType("int");

                    b.Property<float>("ShipLaunchPoints")
                        .HasColumnType("real");

                    b.Property<string>("SoulEggs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoulEggsFull")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TitleProgress")
                        .HasColumnType("float");

                    b.Property<int>("TotalCraftsThatCanBeLegendary")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.PlayerStatsDto", b =>
                {
                    b.Property<string>("EB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EBGoal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EBG");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<float>("JER")
                        .HasColumnType("real");

                    b.Property<string>("JERGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("LLC")
                        .HasColumnType("real");

                    b.Property<float>("MER")
                        .HasColumnType("real");

                    b.Property<string>("MERGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NTitle");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ProgressPercentage")
                        .HasColumnType("real")
                        .HasColumnName("P");

                    b.Property<string>("ProjectedTitleChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Projected");

                    b.Property<int>("ProphecyEggs")
                        .HasColumnType("int")
                        .HasColumnName("PE");

                    b.Property<string>("SE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEGoal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SEG");

                    b.Property<string>("SEPerDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SED");

                    b.Property<string>("SEPerHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SEH");

                    b.Property<string>("SEPerWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SEW");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("PlayerRankings");
                });

            modelBuilder.Entity("HemSoft.EggIncTracker.Data.Dtos.MissionDto", b =>
                {
                    b.HasOne("HemSoft.EggIncTracker.Data.Dtos.PlayerDto", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
