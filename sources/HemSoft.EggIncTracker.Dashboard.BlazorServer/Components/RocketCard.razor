@namespace HemSoft.EggIncTracker.Dashboard.BlazorServer.Components

@if (DashboardPlayer != null && DashboardPlayer.Player != null)
{
    <MudPaper Class="dashboard-tile d-flex flex-column" Style="height: 100%; position: relative; overflow: hidden;">
        <div class="mb-2 text-center">
            <MudText Typo="Typo.h4" Align="Align.Center">@DashboardPlayer.Player.PlayerName</MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">
                <MudText Inline="true" Class="ml-2 align-bottom">
                    (@DashboardPlayer.Player?.Title
                    @if (LastUpdatedTimestamp.HasValue && LastUpdatedTimestamp.Value != DateTime.MinValue)
                    {
                        <span> -- Last Updated: @GetLocalTimeString(LastUpdatedTimestamp)</span>
                    }
    )
                </MudText>
            </MudText>
        </div>

        @if (IsLoading)
        {
            <div class="d-flex justify-center align-center" style="height: 100%;">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </div>
        }
        else if (Missions == null || Missions.Count == 0)
        {
            <div class="d-flex flex-column justify-center align-center" style="height: 100%;">
                <MudText Typo="Typo.h6" Color="Color.Warning">No active missions</MudText>
                <MudText Typo="Typo.body2" Color="Color.Error" Class="mt-2">
                    Mission Count: @(Missions?.Count ?? 0)
                </MudText>
                <MudText Typo="Typo.body2" Color="Color.Info" Class="mt-2">
                    Player EID: @(DashboardPlayer.Player?.EID ?? "Unknown")
                </MudText>
                <MudText Typo="Typo.body2" Color="Color.Info" Class="mt-2">
                    Last Updated: @(LastUpdatedTimestamp?.ToString() ?? "Never")
                </MudText>
            </div>
        }
        else
        {
            <div class="d-flex flex-column gap-4 px-4">
                @foreach (var mission in Missions.Take(3))
                {
                    <MudPaper Elevation="2" Class="pa-3 mission-card" Style="@($"border-radius: 8px; border-left: 4px solid {GetStatusColorHex(mission.Status)}")">
                        <div class="d-flex justify-space-between align-center mb-2">
                            <div class="d-flex align-center">
                                <MudAvatar Color="Color.Primary" Style="background-color: #f5f5f5; color: #424242; margin-right: 12px;">
                                    <MudIcon Icon="@GetShipIcon(mission.Ship)" Size="Size.Medium" />
                                </MudAvatar>
                                <MudText Typo="Typo.h6">@GetShipName(mission.Ship)</MudText>
                            </div>
                            <MudChip Color="@GetStatusColor(mission.Status)" Size="Size.Small">
                                @GetStatusName(mission.Status)
                            </MudChip>
                        </div>

                        <MudText Typo="Typo.body2" Class="mb-1">Mission Level: @mission.Level</MudText>

                        @if (mission.Status == 2) // Traveling
                        {
                            <div class="d-flex justify-space-between align-center mb-2">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" Class="mr-1" />
                                    Capacity: @mission.Capacity
                                </MudText>

                                @if (mission.QualityBump > 0)
                                {
                                    <MudTooltip Text="Quality bonus for this mission">
                                        <MudText Typo="Typo.body2">
                                            <MudIcon Icon="@Icons.Material.Filled.Grade" Size="Size.Small" Class="mr-1" />
                                            Quality: @GetQualityBonusText(mission.QualityBump)
                                        </MudText>
                                    </MudTooltip>
                                }
                            </div>

                            <MudDivider Class="my-2" />

                            <MudText Typo="Typo.body1" Style="@GetReturnTimeStyle(mission.SecondsRemaining)" Class="mb-2 font-weight-bold">
                                <MudIcon Icon="@Icons.Material.Filled.Timer" Size="Size.Small" Class="mr-1" />
                                @FormatTimeRemaining(mission.SecondsRemaining)
                            </MudText>

                            <MudTooltip Text="@($"Mission Progress: {GetMissionProgressPercentage(mission):F1}%")">
                                <MudProgressLinear Color="Color.Info" Value="@GetMissionProgressPercentage(mission)" Class="my-2" />
                            </MudTooltip>

                            <div class="d-flex justify-space-between align-center mt-2">
                                <MudTooltip Text="@($"Mission started at {GetStartTime(mission.StartTimeDerived)}")">
                                    <MudText Typo="Typo.caption">
                                        <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small" Class="mr-1" />
                                        Started: @GetStartTime(mission.StartTimeDerived)
                                    </MudText>
                                </MudTooltip>

                                <MudTooltip Text="@($"Returns on {GetReturnTime(mission.StartTimeDerived, mission.DurationSeconds, true)}")">
                                    <MudText Typo="Typo.caption" Style="@GetReturnTimeStyle(mission.SecondsRemaining)">
                                        <MudIcon Icon="@Icons.Material.Filled.FlightLand" Size="Size.Small" Class="mr-1" />
                                        Returns: @GetReturnTime(mission.StartTimeDerived, mission.DurationSeconds)
                                    </MudText>
                                </MudTooltip>
                            </div>

                            @if (mission.MissionLog != null)
                            {
                                <MudTooltip Text="@mission.MissionLog">
                                    <MudText Typo="Typo.caption" Class="mt-2 text-truncate">
                                        <MudIcon Icon="@Icons.Material.Filled.Description" Size="Size.Small" Class="mr-1" />
                                        @mission.MissionLog
                                    </MudText>
                                </MudTooltip>
                            }
                        }
                        else if (mission.Status == 1) // Fueling
                        {
                            <div class="d-flex justify-space-between align-center mb-2">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" Class="mr-1" />
                                    Capacity: @mission.Capacity
                                </MudText>
                            </div>

                            <MudDivider Class="my-2" />

                            <MudText Typo="Typo.body2" Class="mb-2">
                                <MudIcon Icon="@Icons.Material.Filled.LocalGasStation" Size="Size.Small" Class="mr-1" />
                                Fueling Progress:
                            </MudText>

                            <div class="d-flex flex-column gap-1 mt-2">
                                @foreach (var fuel in mission.FuelList)
                                {
                                    <div class="d-flex align-center justify-space-between">
                                        <MudText Typo="Typo.caption">@GetEggName(fuel.Egg)</MudText>
                                        <MudProgressLinear Color="@(GetFuelPercentage(fuel) >= 100 ? Color.Success : Color.Warning)"
                                                          Value="@GetFuelPercentage(fuel)" Class="mx-2" Style="width: 100px;" />
                                        <MudText Typo="Typo.caption">@GetFuelPercentage(fuel)%</MudText>
                                    </div>
                                }
                            </div>

                            <div class="d-flex justify-space-between align-center mt-3">
                                <MudTooltip Text="Expected mission duration">
                                    <MudText Typo="Typo.caption">
                                        <MudIcon Icon="@Icons.Material.Filled.Timer" Size="Size.Small" Class="mr-1" />
                                        Duration: @GetDurationByShipAndLevel(mission.Ship, mission.Level)
                                    </MudText>
                                </MudTooltip>

                                @if (mission.DurationType > 0)
                                {
                                    <MudTooltip Text="Mission duration type">
                                        <MudText Typo="Typo.caption">
                                            <MudIcon Icon="@Icons.Material.Filled.Category" Size="Size.Small" Class="mr-1" />
                                            Type: @GetDurationType(mission.DurationType)
                                        </MudText>
                                    </MudTooltip>
                                }
                            </div>
                        }
                        else if (mission.Status == 3) // Returned
                        {
                            <div class="d-flex justify-space-between align-center mb-2">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" Class="mr-1" />
                                    Capacity: @mission.Capacity items
                                </MudText>

                                <MudTooltip Text="@GetQualityBonusText(mission.QualityBump)">
                                    <MudText Typo="Typo.body2">
                                        <MudIcon Icon="@Icons.Material.Filled.Grade" Size="Size.Small" Class="mr-1" />
                                        Quality: @GetQualityBonusText(mission.QualityBump)
                                    </MudText>
                                </MudTooltip>
                            </div>

                            <MudDivider Class="my-2" />

                            <MudText Typo="Typo.caption" Class="mb-2">
                                <MudIcon Icon="@Icons.Material.Filled.Event" Size="Size.Small" Class="mr-1" />
                                Returned: @GetStartTime(mission.StartTimeDerived + mission.DurationSeconds)
                            </MudText>

                            <MudButton Color="Color.Success" Variant="Variant.Filled" Size="Size.Small" Class="mt-2" FullWidth="true">
                                <MudIcon Icon="@Icons.Material.Filled.Inventory" Class="mr-2" />
                                Collect Artifacts
                            </MudButton>
                        }
                        else if (mission.Status == 10 || mission.Status == 25) // Complete or Archived
                        {
                            <div class="d-flex justify-space-between align-center mb-2">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" Class="mr-1" />
                                    Capacity: @mission.Capacity items
                                </MudText>

                                <MudTooltip Text="@GetQualityBonusText(mission.QualityBump)">
                                    <MudText Typo="Typo.body2">
                                        <MudIcon Icon="@Icons.Material.Filled.Grade" Size="Size.Small" Class="mr-1" />
                                        Quality: @GetQualityBonusText(mission.QualityBump)
                                    </MudText>
                                </MudTooltip>
                            </div>

                            <MudDivider Class="my-2" />

                            <MudText Typo="Typo.caption" Class="mb-2">
                                <MudIcon Icon="@Icons.Material.Filled.Event" Size="Size.Small" Class="mr-1" />
                                Completed: @GetStartTime(mission.StartTimeDerived + mission.DurationSeconds)
                            </MudText>

                            @if (mission.MissionLog != null)
                            {
                                <MudTooltip Text="@mission.MissionLog">
                                    <MudText Typo="Typo.caption" Class="mt-2 text-truncate">
                                        <MudIcon Icon="@Icons.Material.Filled.Description" Size="Size.Small" Class="mr-1" />
                                        @mission.MissionLog
                                    </MudText>
                                </MudTooltip>
                            }

                            <MudChip Color="@(mission.Status == 10 ? Color.Success : Color.Dark)"
                                    Size="Size.Small"
                                    Class="mt-2"
                                    Style="width: 100%; justify-content: center;">
                                <MudIcon Icon="@(mission.Status == 10 ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Archive)"
                                        Size="Size.Small"
                                        Class="mr-2" />
                                @(mission.Status == 10 ? "Completed" : "Archived")
                            </MudChip>
                        }
                    </MudPaper>
                }

                @if (StandbyMission != null)
                {
                    <MudPaper Elevation="2" Class="pa-3 mission-card standby-mission" Style="border-radius: 8px; border-left: 4px solid #9c27b0;">
                        <div class="d-flex justify-space-between align-center mb-2">
                            <div class="d-flex align-center">
                                <MudAvatar Color="Color.Secondary" Style="background-color: #f5f5f5; color: #9c27b0; margin-right: 12px;">
                                    <MudIcon Icon="@Icons.Material.Filled.RocketLaunch" Size="Size.Medium" />
                                </MudAvatar>
                                <MudText Typo="Typo.h6">@GetShipName(StandbyMission.Ship)</MudText>
                            </div>
                            <MudChip Color="Color.Secondary" Size="Size.Small">Ready to Launch</MudChip>
                        </div>

                        <div class="d-flex justify-space-between align-center mb-2">
                            <MudText Typo="Typo.body2">
                                <MudIcon Icon="@Icons.Material.Filled.Stars" Size="Size.Small" Class="mr-1" />
                                Mission Level: @StandbyMission.Level
                            </MudText>

                            <MudTooltip Text="@($"Ship capacity: {StandbyMission.Capacity} artifacts")">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" Class="mr-1" />
                                    Capacity: @StandbyMission.Capacity
                                </MudText>
                            </MudTooltip>
                        </div>

                        <MudDivider Class="my-2" />

                        <MudText Typo="Typo.body2" Class="mb-2">
                            <MudIcon Icon="@Icons.Material.Filled.LocalGasStation" Size="Size.Small" Class="mr-1" />
                            Fueling Complete:
                        </MudText>

                        <div class="d-flex flex-column gap-1 mt-2">
                            @foreach (var fuel in StandbyMission.FuelList)
                            {
                                <div class="d-flex align-center justify-space-between">
                                    <MudText Typo="Typo.caption">@GetEggName(fuel.Egg)</MudText>
                                    <MudProgressLinear Color="Color.Success" Value="100" Class="mx-2" Style="width: 100px;" />
                                    <MudText Typo="Typo.caption">100%</MudText>
                                </div>
                            }
                        </div>

                        <div class="d-flex justify-space-between align-center mt-3">
                            <MudTooltip Text="Expected mission duration">
                                <MudText Typo="Typo.caption">
                                    <MudIcon Icon="@Icons.Material.Filled.Timer" Size="Size.Small" Class="mr-1" />
                                    Duration: @GetDurationByShipAndLevel(StandbyMission.Ship, StandbyMission.Level)
                                </MudText>
                            </MudTooltip>

                            @if (StandbyMission.DurationType > 0)
                            {
                                <MudTooltip Text="Mission duration type">
                                    <MudText Typo="Typo.caption">
                                        <MudIcon Icon="@Icons.Material.Filled.Category" Size="Size.Small" Class="mr-1" />
                                        Type: @GetDurationType(StandbyMission.DurationType)
                                    </MudText>
                                </MudTooltip>
                            }
                        </div>

                        <MudButton Color="Color.Secondary" Variant="Variant.Filled" Size="Size.Small" Class="mt-3" FullWidth="true">
                            <MudIcon Icon="@Icons.Material.Filled.RocketLaunch" Class="mr-2" />
                            Launch Mission
                        </MudButton>
                    </MudPaper>
                }
            </div>
        }
    </MudPaper>
}
else
{
    <MudPaper Class="pa-4 d-flex justify-center">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    </MudPaper>
}

<style>
    .mission-card {
        border-radius: 8px;
        transition: transform 0.2s;
    }

    .mission-card:hover {
        transform: translateY(-2px);
    }

    .standby-mission {
        border: 1px dashed var(--mud-palette-secondary);
    }
</style>
