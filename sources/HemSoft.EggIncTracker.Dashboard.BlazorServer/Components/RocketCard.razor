@namespace HemSoft.EggIncTracker.Dashboard.BlazorServer.Components

@if (DashboardPlayer != null && DashboardPlayer.Player != null)
{
    <MudPaper Class="dashboard-tile d-flex flex-column" Style="height: 100%; position: relative; overflow: hidden;">
        <div class="mb-2 text-center">
            <MudText Typo="Typo.h4" Align="Align.Center">@DashboardPlayer.Player.PlayerName</MudText>
            <MudText Typo="Typo.body1" Align="Align.Center">
                <MudText Inline="true" Class="ml-2 align-bottom">
                    (@DashboardPlayer.Player?.Title
                    @if (LastUpdatedTimestamp.HasValue && LastUpdatedTimestamp.Value != DateTime.MinValue)
                    {
                        <span> -- Last Updated: @GetLocalTimeString(LastUpdatedTimestamp)</span>
                    }
    )
                </MudText>
            </MudText>
        </div>

        @if (IsLoading)
        {
            <div class="d-flex justify-center align-center" style="height: 100%;">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </div>
        }
        else if (Missions == null || Missions.Count == 0)
        {
            <div class="d-flex flex-column justify-center align-center" style="height: 100%;">
                <MudText Typo="Typo.h6" Color="Color.Warning">No active missions</MudText>
                <MudText Typo="Typo.body2" Color="Color.Error" Class="mt-2">
                    Mission Count: @(Missions?.Count ?? 0)
                </MudText>
                <MudText Typo="Typo.body2" Color="Color.Info" Class="mt-2">
                    Player EID: @(DashboardPlayer.Player?.EID ?? "Unknown")
                </MudText>
                <MudText Typo="Typo.body2" Color="Color.Info" Class="mt-2">
                    Last Updated: @(LastUpdatedTimestamp?.ToString() ?? "Never")
                </MudText>
            </div>
        }
        else
        {
            <div class="d-flex flex-column gap-2 px-4">
                <MudText Typo="Typo.caption" Align="Align.Center" Class="mb-0 missions-count">
                    Active Missions: @Missions.Count
                </MudText>

                @foreach (var mission in Missions.OrderBy(m => m.SecondsRemaining).Take(5))
                {
                    <MudPaper Elevation="2" Class="pa-3 mission-card" Style="@($"border-radius: 8px; border-left: 4px solid {GetStatusColorHex(mission.Status)}")">
                        <div class="d-flex justify-space-between align-center mb-2">
                            <div class="d-flex align-center">
                                <MudAvatar Color="Color.Primary" Style="background-color: #f5f5f5; color: #424242; margin-right: 12px;">
                                    <MudIcon Icon="@GetShipIcon(mission.Ship)" Size="Size.Medium" />
                                </MudAvatar>
                                <MudText Typo="Typo.h6">@GetShipName(mission.Ship)</MudText>
                            </div>
                            <MudChip Color="@GetStatusColor(mission.Status)" Size="Size.Small">
                                @GetStatusName(mission.Status)
                            </MudChip>
                        </div>

                        <div class="d-flex justify-space-between align-center mb-1">
                            <MudTooltip Text="Mission Level">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.Stars" Size="Size.Small" Class="mr-1" />
                                    Level: @mission.Level
                                </MudText>
                            </MudTooltip>

                            <div class="d-flex align-center">
                                <MudTooltip Text="Ship Capacity">
                                    <MudText Typo="Typo.body2" Class="mr-3">
                                        <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" Class="mr-1" />
                                        @mission.Capacity
                                    </MudText>
                                </MudTooltip>

                                @if (mission.QualityBump > 0)
                                {
                                    <MudTooltip Text="Quality bonus for this mission">
                                        <MudText Typo="Typo.body2">
                                            <MudIcon Icon="@Icons.Material.Filled.Grade" Size="Size.Small" Class="mr-1" />
                                            @GetQualityBonusText(mission.QualityBump)
                                        </MudText>
                                    </MudTooltip>
                                }
                            </div>
                        </div>

                        @if (mission.Status == 2) // Traveling
                        {

                            <MudDivider Class="my-2" />

                            <div class="d-flex justify-space-between align-center mb-1">
                                <MudTooltip Text="@($"Mission started at {GetStartTime(mission.StartTimeDerived)}")">
                                    <MudText Typo="Typo.caption" Class="mission-time-label">
                                        @GetStartTime(mission.StartTimeDerived)
                                    </MudText>
                                </MudTooltip>

                                <MudTooltip Text="@($"Returns on {GetReturnTime(mission, true)}")">
                                    <MudText Typo="Typo.caption" Class="mission-time-label" Style="@GetReturnTimeStyle(mission.SecondsRemaining)">
                                        @GetReturnTime(mission)
                                    </MudText>
                                </MudTooltip>
                            </div>

                            <div class="d-flex justify-center align-center">
                                <MudTooltip Text="@($"Mission Progress: {GetMissionProgressPercentage(mission):F1}%")">
                                    <div class="progress-container">
                                        <MudProgressLinear Color="Color.Success" Value="@GetMissionProgressPercentage(mission)" Class="mt-0 mb-0" Style="height: 24px; border-radius: 3px;" />
                                        <div class="progress-text">
                                            <MudText Typo="Typo.body1" Class="progress-time">
                                                @CalculateActualTimeRemaining(mission)
                                            </MudText>
                                        </div>
                                    </div>
                                </MudTooltip>
                            </div>
                        }
                        else if (mission.Status == 1) // Fueling
                        {

                            <MudDivider Class="my-2" />

                            <MudText Typo="Typo.body2" Class="mb-2">
                                <MudIcon Icon="@Icons.Material.Filled.LocalGasStation" Size="Size.Small" Class="mr-1" />
                                Fueling Progress:
                            </MudText>

                            <div class="d-flex flex-column gap-1 mt-2">
                                @foreach (var fuel in mission.FuelList)
                                {
                                    <div class="d-flex align-center">
                                        <MudText Typo="Typo.caption" Style="width: 100px; min-width: 100px;">@GetEggName(fuel.Egg)</MudText>
                                        <MudProgressLinear Color="@(GetFuelPercentage(fuel) >= 100 ? Color.Success : Color.Warning)"
                                                          Value="@GetFuelPercentage(fuel)" Class="mx-2" Style="width: 100px; flex-grow: 0;" />
                                        <MudText Typo="Typo.caption" Style="width: 40px; text-align: right;">@GetFuelPercentage(fuel)%</MudText>
                                    </div>
                                }
                            </div>

                            <div class="d-flex justify-space-between align-center mt-3">
                                <MudTooltip Text="Expected mission duration">
                                    <MudText Typo="Typo.caption">
                                        <MudIcon Icon="@Icons.Material.Filled.Timer" Size="Size.Small" Class="mr-1" />
                                        Duration: @GetDurationByShipAndLevel(mission.Ship, mission.Level)
                                    </MudText>
                                </MudTooltip>

                                @if (mission.DurationType > 0)
                                {
                                    <MudTooltip Text="Mission duration type">
                                        <MudText Typo="Typo.caption">
                                            <MudIcon Icon="@Icons.Material.Filled.Category" Size="Size.Small" Class="mr-1" />
                                            Type: @GetDurationType(mission.DurationType)
                                        </MudText>
                                    </MudTooltip>
                                }
                            </div>
                        }
                        else if (mission.Status == 3) // Returned
                        {

                            <MudDivider Class="my-2" />

                            <div class="d-flex justify-space-between align-center mb-1">
                                <MudTooltip Text="@($"Mission started at {GetStartTime(mission.StartTimeDerived)}")">
                                    <MudText Typo="Typo.caption" Class="mission-time-label">
                                        @GetStartTime(mission.StartTimeDerived)
                                    </MudText>
                                </MudTooltip>

                                <MudTooltip Text="@($"Returned at {GetStartTime(mission.StartTimeDerived + mission.DurationSeconds)}")">
                                    <MudText Typo="Typo.caption" Class="mission-time-label" Style="color: var(--mud-palette-success);">
                                        @GetStartTime(mission.StartTimeDerived + mission.DurationSeconds)
                                    </MudText>
                                </MudTooltip>
                            </div>

                            <div class="d-flex justify-center align-center">
                                <MudTooltip Text="@($"Mission Progress: {GetMissionProgressPercentage(mission):F1}%")">
                                    <div class="progress-container">
                                        <MudProgressLinear Color="Color.Success" Value="@GetMissionProgressPercentage(mission)" Class="mt-0 mb-0" Style="height: 24px; border-radius: 3px;" />
                                        <div class="progress-text">
                                            <MudText Typo="Typo.body1" Class="progress-time">
                                                @FormatTimeRemaining(mission.SecondsRemaining)
                                            </MudText>
                                        </div>
                                    </div>
                                </MudTooltip>
                            </div>

                            <MudButton Color="Color.Success" Variant="Variant.Filled" Size="Size.Small" Class="mt-2" FullWidth="true">
                                <MudIcon Icon="@Icons.Material.Filled.Inventory" Class="mr-2" />
                                Collect Artifacts
                            </MudButton>
                        }
                        else if (mission.Status == 10 || mission.Status == 25) // Complete or Archived
                        {

                            <MudDivider Class="my-2" />

                            <div class="d-flex justify-space-between align-center mb-1">
                                <MudTooltip Text="@($"Mission started at {GetStartTime(mission.StartTimeDerived)}")">
                                    <MudText Typo="Typo.caption" Class="mission-time-label">
                                        @GetStartTime(mission.StartTimeDerived)
                                    </MudText>
                                </MudTooltip>

                                <MudTooltip Text="@($"Returns on {GetReturnTime(mission, true)}")">
                                    <MudText Typo="Typo.caption" Class="mission-time-label" Style="@GetReturnTimeStyle(mission.SecondsRemaining)">
                                        @GetReturnTime(mission)
                                    </MudText>
                                </MudTooltip>
                            </div>

                            <div class="d-flex justify-center align-center">
                                <MudTooltip Text="@($"Mission Progress: {GetMissionProgressPercentage(mission):F1}%")">
                                    <div class="progress-container">
                                        <MudProgressLinear Color="Color.Success" Value="@GetMissionProgressPercentage(mission)" Class="mt-0 mb-0" Style="height: 24px; border-radius: 3px;" />
                                        <div class="progress-text">
                                            <MudText Typo="Typo.body1" Class="progress-time">
                                                @CalculateActualTimeRemaining(mission)
                                            </MudText>
                                        </div>
                                    </div>
                                </MudTooltip>
                            </div>
                        }
                    </MudPaper>
                }

                @if (StandbyMission != null)
                {
                    <MudPaper Elevation="2" Class="pa-3 mission-card standby-mission" Style="border-radius: 8px; border-left: 4px solid #9c27b0;">
                        <div class="d-flex justify-space-between align-center mb-2">
                            <div class="d-flex align-center">
                                <MudAvatar Color="Color.Secondary" Style="background-color: #f5f5f5; color: #9c27b0; margin-right: 12px;">
                                    <MudIcon Icon="@Icons.Material.Filled.RocketLaunch" Size="Size.Medium" />
                                </MudAvatar>
                                <MudText Typo="Typo.h6">@GetShipName(StandbyMission.Ship)</MudText>
                            </div>
                            <MudChip Color="Color.Secondary" Size="Size.Small">Ready to Launch</MudChip>
                        </div>

                        <div class="d-flex justify-space-between align-center mb-1">
                            <MudTooltip Text="Mission Level">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.Stars" Size="Size.Small" Class="mr-1" />
                                    Level= @StandbyMission.Level
                                </MudText>
                            </MudTooltip>

                            <div class="d-flex align-center">
                                <MudTooltip Text="Ship Capacity">
                                    <MudText Typo="Typo.body2">
                                        <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" Class="mr-1" />
                                        @StandbyMission.Capacity
                                    </MudText>
                                </MudTooltip>
                            </div>
                        </div>

                        <MudDivider Class="my-2" />

                        <MudText Typo="Typo.body2" Class="mb-2">
                            <MudIcon Icon="@Icons.Material.Filled.LocalGasStation" Size="Size.Small" Class="mr-1" />
                            Fueling Complete:
                        </MudText>

                        <div class="d-flex flex-column gap-1 mt-2">
                            @foreach (var fuel in StandbyMission.FuelList)
                            {
                                <div class="d-flex align-center">
                                    <MudText Typo="Typo.caption" Style="width: 100px; min-width: 100px;">@GetEggName(fuel.Egg)</MudText>
                                    <MudProgressLinear Color="Color.Success" Value="100" Class="mx-2" Style="width: 100px; flex-grow: 0;" />
                                    <MudText Typo="Typo.caption" Style="width: 40px; text-align: right;">100%</MudText>
                                </div>
                            }
                        </div>

                        <div class="d-flex justify-space-between align-center mt-3">
                            <MudTooltip Text="Expected mission duration">
                                <MudText Typo="Typo.caption">
                                    <MudIcon Icon="@Icons.Material.Filled.Timer" Size="Size.Small" Class="mr-1" />
                                    Duration: @GetDurationByShipAndLevel(StandbyMission.Ship, StandbyMission.Level)
                                </MudText>
                            </MudTooltip>

                            @if (StandbyMission.DurationType > 0)
                            {
                                <MudTooltip Text="Mission duration type">
                                    <MudText Typo="Typo.caption">
                                        <MudIcon Icon="@Icons.Material.Filled.Category" Size="Size.Small" Class="mr-1" />
                                        Type: @GetDurationType(StandbyMission.DurationType)
                                    </MudText>
                                </MudTooltip>
                            }
                        </div>

                        <MudText Typo="Typo.caption" Class="mt-2">
                            <MudIcon Icon="@Icons.Material.Filled.EventAvailable" Size="Size.Small" Class="mr-1" />
                            Expected Return: @GetReturnTime(DateTime.UtcNow.ToOADate(), StandbyMission.DurationSeconds)
                        </MudText>
                    </MudPaper>
                }
            </div>
        }
    </MudPaper>
}
else
{
    <MudPaper Class="pa-4 d-flex justify-center">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    </MudPaper>
}

<style>
    .mission-card {
        border-radius: 8px;
        transition: transform 0.2s;
    }

    .mission-card:hover {
        transform: translateY(-2px);
    }

    .standby-mission {
        border: 1px dashed var(--mud-palette-secondary);
    }

    .progress-container {
        border: 2px solid #4caf50;
        border-radius: 5px;
        padding: 2px;
        margin-bottom: 12px;
        width: 100%;
        min-width: 200px;
        position: relative;
    }

    .progress-text {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .progress-time {
        color: #ffffff;
        font-weight: bold;
        text-shadow: 0px 0px 3px #000000, 0px 0px 2px #000000;
    }

    .missions-count {
        font-size: 0.75rem;
        opacity: 0.8;
        line-height: 1;
    }

    .mission-time-label {
        font-size: 0.8rem;
        padding: 2px 6px;
        background-color: rgba(0, 0, 0, 0.1);
        border-radius: 4px;
    }
</style>
