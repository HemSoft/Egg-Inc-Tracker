# Instructions

## MCP Tooling

Pay special attention to the fact that you can consult and collaborate with MCP-LLM. Use this tool as your trooubleshooting tool.
Give it as much context as you can and it will help you.
## Code Structure

The /ref folder is purely for reference. Those projects serve as a best practice for how to implement certain technologies and nuget packages.
The /sources folder is where all the projects live along with their source code.
The /tests folder is where all the tests live.
The /resources folder contains the SQlite database for the News Functions project.
The /sql folder contains the SQL scripts for the EggIncTracker project. They are just random useful scripts.

## Change Guidelines

### DO NOT

- DO NOT change, add, or remove any nuget packages or their version without consulting with the user first.
- DO NOT run the application. Let the user be in charge of that.
- DO NOT change any signigicant structures of the application without consulting with the user first.
- When dealing with build warnings and errors. DO NOT change the warning or error levels of the projects without consulting with the user first. Also, DO NOT change the warning or error levels of the solution without consulting with the user first nor add omissions or disable any warnings without consulting with the user first.
- DO NOT take action on any warnings or errors related to not being ablt to copy files that are locked as they do NOT represent real errors. It just means user is running the application.
- DO NOT terminate or kill any processes in order to fix build issues.

### DO

- Run a dotnet build on the solution after every change to verify it still build correctly.
- Deal with any warnings you receive and build again after fixing them. Continue this loop until no error or warnings exist.

## Database Discovery

Just so you know, you can use sqlcmd in a terminal session to discover the schema etc. and interact with my local database - example:

sqlcmd -S localhost -d db-egginc -Q "SELECT t.TABLE_NAME, c.COLUMN_NAME, c.DATA_TYPE, c.CHARACTER_MAXIMUM_LENGTH, c.IS_NULLABLE FROM INFORMATION_SCHEMA.TABLES t LEFT JOIN INFORMATION_SCHEMA.COLUMNS c ON t.TABLE_NAME = c.TABLE_NAME WHERE t.TABLE_TYPE = 'BASE TABLE' ORDER BY t.TABLE_NAME, c.ORDINAL_POSITION" -s"," -o "table_definitions.csv"

That is one way to discover all the the tables in my database that I'm using in this project. You can discover all the stored procs as well. For Instance, I have a stored proc that can give you the correct number of prestiges today and week and the amount of SE earned today and this week called GetPlayerProgress.

Do NOT do any alterations to the database schema nor the data.

## Azure

- @azure Rule - Use Azure Best Practices: When generating code for Azure, running terminal commands for Azure, or performing operations related to Azure, invoke your `get_azure_best_practices` tool if available.
